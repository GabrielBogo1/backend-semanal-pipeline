name: CI/CD Backend

on:
  push:
    branches:
      - dev
      - main
      - release

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Dar permissão de execução ao Maven Wrapper
        run: chmod +x ./mvnw

      - name: Rodar testes
        run: ./mvnw test

  deploy-stage:
    needs: tests
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    container:
      image: google/cloud-sdk:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Autenticar com GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configurar kubectl e fazer deploy
        run: |
          gcloud container clusters get-credentials meu-cluster-cicd --zone=us-central1-a --project=cluster-mensal
          kubectl config set-context --current --namespace=stage
          kubectl apply -f k8s/backend/

  deploy-prod:
    needs: tests
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    container:
      image: google/cloud-sdk:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Autenticar com GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configurar kubectl e fazer deploy
        run: |
          gcloud container clusters get-credentials meu-cluster-cicd --zone=us-central1-a --project=cluster-mensal
          kubectl config set-context --current --namespace=production
          kubectl apply -f k8s/backend/

  release:
    if: github.ref == 'refs/heads/release'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Dar permissão de execução ao Maven Wrapper
        run: chmod +x ./mvnw

      - name: Build do JAR com Maven
        run: ./mvnw package -DskipTests

      - name: Autenticar com GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Docker
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t backend-kubernetes2:release-${{ github.sha }} .
          echo "Build completo"

      - name: Push para Artifact Registry
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" | docker login -u _json_key --password-stdin https://us-central1-a-docker.pkg.dev
          docker tag backend-kubernetes2:release-${{ github.sha }} us-central1-a-docker.pkg.dev/cluster-mensal/meu-repo/backend-kubernetes2:release-${{ github.sha }}
          docker push us-central1-a-docker.pkg.dev/cluster-mensal/meu-repo/backend-kubernetes2:release-${{ github.sha }}

      - name: Criar payload do Slack
        run: |
          echo "{\"text\":\"Nova release publicada para pré-produção: ${{ github.ref }}\"}" > slack-payload.json

      - name: Notificação Slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload-file-path: ./slack-payload.json
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
